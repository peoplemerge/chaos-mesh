name: ci

on:
  pull_request:
    branches:
      - master
      - release-*

jobs:

  pull:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        job:
          - verify
          - build
          - test
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Build Chaos Mesh Build Env
        if: ${{ github.event.pull_request }}
        env:
          IMAGE_BUILD_ENV_BUILD: ${{ contains(github.event.pull_request.labels.*.name, 'rebuild-build-env-image') }}
        run: |
          if [ "${IMAGE_BUILD_ENV_BUILD}" = "true" ] ; then
            export IMAGE_BUILD_ENV_BUILD=1; 
          else 
            export IMAGE_BUILD_ENV_BUILD=0; 
          fi

          make image-build-env
      
      - name: Build Chaos Mesh Dev Env
        if: ${{ github.event.pull_request }}
        env:
          IMAGE_DEV_ENV_BUILD: ${{ contains(github.event.pull_request.labels.*.name, 'rebuild-dev-env-image') }}
        run: |
          if [ "${IMAGE_DEV_ENV_BUILD}" = "true" ] ; then
            export IMAGE_DEV_ENV_BUILD=1; 
          else 
            export IMAGE_DEV_ENV_BUILD=0; 
          fi

          make image-dev-env

      - name: ${{ matrix.job }}
        run: |
          # workaround for https://github.com/actions/setup-go/issues/14
          export GOPATH=${GITHUB_WORKSPACE}/go
          export PATH=$PATH:$GOPATH/bin

          if [[ "$job" == "verify" ]]; then
            make check
            echo "Please make check before creating a PR"
            git diff --quiet -- . || (git diff | cat && false)
          elif [[ "$job" == "build" ]]; then
            make image
          elif [[ "$job" == "test" ]]; then
            ROOT=$(pwd)
            KUBEBUILDER_ASSETS=${ROOT}/output/bin/kubebuilder/bin make test
            BUILD_NUMBER=${BUILD_NUMBER} CODECOV_TOKEN="${CODECOV_TOKEN}" CI=1 make coverage
          else
            make $job
          fi
        env:
          job: ${{ matrix.job }}
